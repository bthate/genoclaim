#!/usr/bin/python3 -u

import json
import ob
import ob.evt
import obot
import os
import time
import threading

from ob import Object, k
from ob.csl import Console
from ob.dpt import dispatch
from ob.pst import Persist
from ob.shl import execute, hd, parse_cli, set_completer
from ob.tms import elapsed
from ob.utl import get_name

from rssbot import __version__

ob.evt.aliases = {
           "c": "cmds",
           "cfg": "show cfg",
           "f": "find",
           "l": "log",
           "ps": "show tasks",
           "t": "todo",
           "u": "show uptime",
           "v": "show version"
}

opts = [
    ('-d', '', 'string', "", 'workdir', 'set working directory.'),
    ('-k', '', "store_true", False, "kernel", "read from previous kernel config."),
    ('-l', '', 'string', '', 'level', 'loglevel.'),
    ('-m', '', 'string', '', 'modules', 'modules to load.'),
    ('-o', '', "string", "", 'options', "options to use."),
    ('-p', '', "store_false", True, "prompting", "prompt for initial values."),
    ('-r', '', 'store_true', False, 'resume', 'resume the bot.'),
    ('-s', '', 'store_true', False, 'dosave', 'save configuration files.'),
    ('-v', '', 'store_true', False, 'verbose', 'enable verbose mode.'),
    ('-z', '', 'store_true', False, 'shell', 'disenable shell.'),
    ('', '--logdir', "string", "", 'logdir', "directory to find the logfiles."),
]

def main():
    parse_cli("genoclaim", __version__, opts, hd(".genoclaim"), "genoclaim <server> <channel> <nick>")
    k.cfg.prompting = not k.cfg.shell and k.cfg.prompting
    if not k.init("obot.irc"):
        return
    k.init("genoclaim")
    k.init("obot.cmds")
    k.init("obot.show")
    k.init(k.cfg.modules)
    if k.cfg.shell:
        c = Console()
        c.start()
        k.add(c)
        k.start()
        k.wait()
    else:
        k.cmd(k.cfg.txt)
 
execute(main)
os._exit(0)
